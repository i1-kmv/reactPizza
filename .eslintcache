[{"D:\\easyCode\\reactPizza\\my-app\\src\\index.js":"1","D:\\easyCode\\reactPizza\\my-app\\src\\App.js":"2","D:\\easyCode\\reactPizza\\my-app\\src\\components\\Button.jsx":"3","D:\\easyCode\\reactPizza\\my-app\\src\\components\\Header.jsx":"4","D:\\easyCode\\reactPizza\\my-app\\src\\components\\Categories.jsx":"5","D:\\easyCode\\reactPizza\\my-app\\src\\components\\SortPopup.jsx":"6","D:\\easyCode\\reactPizza\\my-app\\src\\pages\\Home.jsx":"7","D:\\easyCode\\reactPizza\\my-app\\src\\pages\\Cart.jsx":"8"},{"size":494,"mtime":1613383213962,"results":"9","hashOfConfig":"10"},{"size":655,"mtime":1613384269875,"results":"11","hashOfConfig":"10"},{"size":333,"mtime":1613065931725,"results":"12","hashOfConfig":"10"},{"size":3516,"mtime":1613384469319,"results":"13","hashOfConfig":"10"},{"size":691,"mtime":1613233455367,"results":"14","hashOfConfig":"10"},{"size":2450,"mtime":1613380994561,"results":"15","hashOfConfig":"10"},{"size":19680,"mtime":1613383809623,"results":"16","hashOfConfig":"10"},{"size":136,"mtime":1613384256301,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ua2f7v",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\easyCode\\reactPizza\\my-app\\src\\index.js",["37"],"D:\\easyCode\\reactPizza\\my-app\\src\\App.js",["38","39","40"],"D:\\easyCode\\reactPizza\\my-app\\src\\components\\Button.jsx",[],["41","42"],"D:\\easyCode\\reactPizza\\my-app\\src\\components\\Header.jsx",[],"D:\\easyCode\\reactPizza\\my-app\\src\\components\\Categories.jsx",["43"],"import React from \"react\";\r\n\r\n\r\nexport const Categories = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"categories\">\r\n                <ul>\r\n                    {\r\n                        props.items.map((item, index) =>\r\n                            <li\r\n                                onClick={() => props.setActiveItem(index)}\r\n                                key={`${item}_${index}`}\r\n                                className={props.activeItem == index ? 'active' : ''}\r\n                            >\r\n                                {item}\r\n                            </li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\easyCode\\reactPizza\\my-app\\src\\components\\SortPopup.jsx",["44","45"],"import React, {useEffect, useRef, useState} from \"react\";\r\n\r\n\r\nexport function SortPopup() {\r\n\r\n    const [visiblePopup, setVisiblePopup] = useState(false)\r\n    const [activeItem, setActiveItem] = useState(0)\r\n    const selectItemHandler = (index) => {\r\n        setActiveItem(index)\r\n        setVisiblePopup(false)\r\n    }\r\n    const toggleVisiblePopup = () => setVisiblePopup(!visiblePopup)\r\n    const popupItems = ['популярности', 'цене', 'алфавиту']\r\n    const sortRef = useRef()\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', (e) => {\r\n           if ( !e.path.includes(sortRef.current) && visiblePopup) {\r\n               toggleVisiblePopup()\r\n           }\r\n        })\r\n    }, [visiblePopup])\r\n\r\n    return (\r\n        <div className=\"sort\" ref={sortRef}>\r\n            <div className=\"sort__label\">\r\n                <svg className={visiblePopup ? 'rotated' : ''}\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n                <span onClick={toggleVisiblePopup}>{popupItems[activeItem]}</span>\r\n            </div>\r\n            {\r\n                visiblePopup && <div className=\"sort__popup\">\r\n                    <ul>\r\n                        {popupItems.map((item, index) => {\r\n                            return (\r\n                                <li key={`${item}_${index}`}\r\n                                    className={activeItem == index ? \"active\" : ''}\r\n                                    onClick={() => selectItemHandler(index)}>\r\n                                    {item}\r\n                                </li>\r\n                            )\r\n                        })}\r\n\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\easyCode\\reactPizza\\my-app\\src\\pages\\Home.jsx",[],"D:\\easyCode\\reactPizza\\my-app\\src\\pages\\Cart.jsx",[],{"ruleId":"46","severity":1,"message":"47","line":5,"column":24,"nodeType":"48","messageId":"49","endLine":5,"endColumn":29},{"ruleId":"46","severity":1,"message":"50","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":24},{"ruleId":"46","severity":1,"message":"51","line":3,"column":9,"nodeType":"48","messageId":"49","endLine":3,"endColumn":19},{"ruleId":"46","severity":1,"message":"52","line":4,"column":9,"nodeType":"48","messageId":"49","endLine":4,"endColumn":18},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":14,"column":61,"nodeType":"59","messageId":"60","endLine":14,"endColumn":63},{"ruleId":"61","severity":1,"message":"62","line":21,"column":8,"nodeType":"63","endLine":21,"endColumn":22,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"58","line":47,"column":59,"nodeType":"59","messageId":"60","endLine":47,"endColumn":61},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Categories' is defined but never used.","'SortPopup' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleVisiblePopup'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [toggleVisiblePopup, visiblePopup]",{"range":"70","text":"71"},[704,718],"[toggleVisiblePopup, visiblePopup]"]